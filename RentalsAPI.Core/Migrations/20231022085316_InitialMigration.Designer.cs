// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RentalsAPI.Core.Data.Context;

#nullable disable

namespace RentalsAPI.Core.Migrations
{
    [DbContext(typeof(RentalsContext))]
    [Migration("20231022085316_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RentalsAPI.Core.Data.Models.RentalOffer", b =>
                {
                    b.Property<int>("GlobalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GlobalID"));

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageURL")
                        .HasColumnType("text");

                    b.Property<string>("LocalID")
                        .HasColumnType("text");

                    b.Property<string>("LogoURL")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("SippAcriss")
                        .HasColumnType("text");

                    b.Property<string>("Supplier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleName")
                        .HasColumnType("text");

                    b.HasKey("GlobalID");

                    b.ToTable("RentalOffers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("RentalOffer");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RentalsAPI.Core.Suppliers.BestRentals.BestRentalsOffer", b =>
                {
                    b.HasBaseType("RentalsAPI.Core.Data.Models.RentalOffer");

                    b.HasDiscriminator().HasValue("BestRentalsOffer");
                });

            modelBuilder.Entity("RentalsAPI.Core.Suppliers.NorthernRentals.NorthernRentalsOffer", b =>
                {
                    b.HasBaseType("RentalsAPI.Core.Data.Models.RentalOffer");

                    b.HasDiscriminator().HasValue("NorthernRentalsOffer");
                });

            modelBuilder.Entity("RentalsAPI.Core.Suppliers.SouthRentals.SouthRentalsOffer", b =>
                {
                    b.HasBaseType("RentalsAPI.Core.Data.Models.RentalOffer");

                    b.HasDiscriminator().HasValue("SouthRentalsOffer");
                });
#pragma warning restore 612, 618
        }
    }
}
